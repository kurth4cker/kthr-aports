From 20e7dfd6441faf025e1658d160e7cb1e63bc10eb Mon Sep 17 00:00:00 2001
From: Ilya Fedin <fedin-ilja2010@ya.ru>
Date: Wed, 21 Sep 2022 10:27:14 +0400
Subject: [PATCH] Build bundled kcoreaddons

---
 external/kcoreaddons/CMakeLists.txt | 97 ++++++++++++++++++++++-------
 external/kcoreaddons/KSandbox       | 23 -------
 external/kcoreaddons/KUrlMimeData   | 26 --------
 external/qt/package.cmake           |  3 +-
 4 files changed, 76 insertions(+), 73 deletions(-)
 delete mode 100644 external/kcoreaddons/KSandbox
 delete mode 100644 external/kcoreaddons/KUrlMimeData

diff --git a/cmake/external/kcoreaddons/CMakeLists.txt b/cmake/external/kcoreaddons/CMakeLists.txt
index 528a487..0233483 100644
--- a/cmake/external/kcoreaddons/CMakeLists.txt
+++ b/cmake/external/kcoreaddons/CMakeLists.txt
@@ -4,46 +4,97 @@
 # For license and copyright information please follow this link:
 # https://github.com/desktop-app/legal/blob/master/LEGAL
 
-if (NOT LINUX)
+if (DESKTOP_APP_USE_PACKAGED AND QT_VERSION_MAJOR EQUAL 5)
     add_library(external_kcoreaddons INTERFACE IMPORTED GLOBAL)
     add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
 
-    target_include_directories(external_kcoreaddons SYSTEM
-    INTERFACE
-        ${CMAKE_CURRENT_SOURCE_DIR}
-    )
+    find_package(KF5CoreAddons REQUIRED)
+    target_link_libraries(external_kcoreaddons INTERFACE KF5::CoreAddons)
+    return()
+endif()
+
+add_library(external_kcoreaddons STATIC)
+add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
+init_target(external_kcoreaddons "(external)")
 
-    target_link_libraries(external_kcoreaddons
-    INTERFACE
-        desktop-app::external_qt
+set(kcoreaddons_loc ${third_party_loc}/kcoreaddons)
+set(kcoreaddons_src ${kcoreaddons_loc}/src/lib)
+
+nice_target_sources(external_kcoreaddons ${kcoreaddons_src}
+PRIVATE
+    io/kurlmimedata.cpp
+    io/kurlmimedata.h
+    util/ksandbox.cpp
+    util/ksandbox.h
+    util/kshell.cpp
+    util/kshell.h
+    util/kshell_p.h
+    util/kshell_unix.cpp
+    util/kshell_win.cpp
+    util/kuser.h
+    util/kuser_unix.cpp
+    util/kuser_win.cpp
+)
+
+if (NOT UNIX)
+    remove_target_sources(external_kcoreaddons ${kcoreaddons_src}
+        util/kshell_unix.cpp
+        util/kuser_unix.cpp
     )
+endif()
 
-    return()
+if (NOT WIN32)
+    remove_target_sources(external_kcoreaddons ${kcoreaddons_src}
+        util/kshell_win.cpp
+        util/kuser_win.cpp
+    )
 endif()
 
-if (DESKTOP_APP_USE_PACKAGED)
-    add_library(external_kcoreaddons INTERFACE IMPORTED GLOBAL)
-    add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
+if (NOT DESKTOP_APP_DISABLE_DBUS_INTEGRATION)
+    set_source_files_properties(${kcoreaddons_src}/io/org.freedesktop.portal.FileTransfer.xml PROPERTIES INCLUDE ${kcoreaddons_src}/io/dbustypes_p.h)
+    qt_add_dbus_interface(_dbus_SRCS ${kcoreaddons_src}/io/org.freedesktop.portal.FileTransfer.xml org.freedesktop.portal.FileTransfer)
 
-    find_package(KF5CoreAddons REQUIRED)
-    target_link_libraries(external_kcoreaddons INTERFACE KF5::CoreAddons)
-    return()
+    set_source_files_properties(${kcoreaddons_src}/io/org.kde.KIOFuse.VFS.xml PROPERTIES NO_NAMESPACE TRUE)
+    qt_add_dbus_interface(_dbus_SRCS ${kcoreaddons_src}/io/org.kde.KIOFuse.VFS.xml org.kde.KIOFuse.VFS)
+
+    target_sources(external_kcoreaddons PRIVATE ${_dbus_SRCS})
+
+    target_compile_definitions(external_kcoreaddons
+    PRIVATE
+        HAVE_QTDBUS
+    )
 endif()
 
-add_library(external_kcoreaddons STATIC IMPORTED GLOBAL)
-add_library(desktop-app::external_kcoreaddons ALIAS external_kcoreaddons)
+file(TOUCH
+    ${CMAKE_CURRENT_BINARY_DIR}/config-util.h
+    ${CMAKE_CURRENT_BINARY_DIR}/config-kdirwatch.h
+)
+
+file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/include/kcoreaddons_export.h
+    "#define KCOREADDONS_ENABLE_DEPRECATED_SINCE(major, minor) 0"
+)
+
+file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/kcoreaddons_debug.h
+    "#pragma once\n#include <QLoggingCategory>\nstatic const QLoggingCategory KCOREADDONS_DEBUG(\"kf.coreaddons\");"
+)
 
-find_library(DESKTOP_APP_KCOREADDONS_LIBRARIES libKF5CoreAddons.a REQUIRED)
-set_target_properties(external_kcoreaddons PROPERTIES
-    IMPORTED_LOCATION "${DESKTOP_APP_KCOREADDONS_LIBRARIES}"
+target_compile_definitions(external_kcoreaddons
+PUBLIC
+    KCOREADDONS_EXPORT=
+PRIVATE
+    ACCOUNTS_SERVICE_ICON_DIR="/var/lib/AccountsService/icons"
 )
 
 target_include_directories(external_kcoreaddons SYSTEM
-INTERFACE
-    /usr/local/include/KF${QT_VERSION_MAJOR}/KCoreAddons
+PUBLIC
+    ${kcoreaddons_src}/io
+    ${kcoreaddons_src}/util
+    ${CMAKE_CURRENT_BINARY_DIR}/include
+PRIVATE
+    ${CMAKE_CURRENT_BINARY_DIR}
 )
 
 target_link_libraries(external_kcoreaddons
-INTERFACE
+PRIVATE
     desktop-app::external_qt
 )
diff --git a/cmake/external/kcoreaddons/KUrlMimeData b/cmake/external/kcoreaddons/KUrlMimeData
deleted file mode 100644
index 23e0485..0000000
--- a/cmake/external/kcoreaddons/KUrlMimeData
+++ /dev/null
@@ -1,26 +0,0 @@
-// This file is part of Desktop App Toolkit,
-// a set of libraries for developing nice desktop applications.
-//
-// For license and copyright information please follow this link:
-// https://github.com/desktop-app/legal/blob/master/LEGAL
-//
-#pragma once
-
-#include <QtCore/QMimeData>
-
-namespace KUrlMimeData {
-
-enum DecodeOptions {
-    PreferLocalUrls,
-    PreferKdeUrls,
-};
-
-inline bool exportUrlsToPortal(QMimeData *mimeData) {
-    return false;
-}
-
-inline auto urlsFromMimeData(const QMimeData *mimeData, ...) {
-    return mimeData->urls();
-}
-
-} // namespace KUrlMimeData
diff --git a/cmake/external/qt/package.cmake b/cmake/external/qt/package.cmake
index fde6ead..6678de3 100644
--- a/cmake/external/qt/package.cmake
+++ b/cmake/external/qt/package.cmake
@@ -45,7 +45,8 @@ if (LINUX)
     endif()
 
     if ((NOT DESKTOP_APP_USE_PACKAGED
-                OR (DESKTOP_APP_USE_PACKAGED AND DESKTOP_APP_USE_PACKAGED_LAZY))
+                OR (DESKTOP_APP_USE_PACKAGED AND DESKTOP_APP_USE_PACKAGED_LAZY)
+                OR (DESKTOP_APP_USE_PACKAGED AND NOT QT_VERSION_MAJOR EQUAL 5))
             AND NOT DESKTOP_APP_DISABLE_DBUS_INTEGRATION)
         find_package(Qt${QT_VERSION_MAJOR} COMPONENTS DBus REQUIRED)
     elseif (NOT DESKTOP_APP_USE_PACKAGED)
